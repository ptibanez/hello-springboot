---
name: QA-unit
run-name: QA unit testing in ${{ github.ref_name || 'default' }} branch

concurrency:
  group: qa-unit-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      ATTACH_TARGET:
        description: Target platform to upload the generated report, it does not export results if empty. (p.e. jfrog)
        required: false
  pull_request:
    types: [closed]
    branches: ['develop', 'develop-*', 'main', 'main-*']
    paths: ['code/**', '.github/workflows/QA_unit.yml']
  release:
    types:
      - published
jobs:
  unit-tests:      
    name: SonarQube / Unit Tests
    if: ${{ (github.event.pull_request.merged == true && (vars.DEVELOPMENT_FLOW != 'trunk-based-development' && (github.base_ref == 'develop' || startsWith(github.base_ref, 'develop-'))) ||
        (vars.DEVELOPMENT_FLOW == 'trunk-based-development' && (github.base_ref == 'main' || startsWith(github.base_ref, 'main-')))) ||
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'release' }}
    timeout-minutes: 30  
    runs-on: ubuntu-latest
    steps:
      - name: Check default branch
        id: default-branch
        run: |
          if [[ "${{ vars.DEVELOPMENT_FLOW }}" != "trunk-based-development" && "${{ github.event.repository.default_branch }}" == "develop" ]]; then
            echo "DEFAULT_BRANCH=develop" >> "$GITHUB_OUTPUT"
          else
            echo "DEFAULT_BRANCH=main" >> "$GITHUB_OUTPUT"
          fi
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
#      - name: Check where config_test is
#        id: check-where-config-test-is
#        env:
#          CONFIG_TEST_FILE: code/src/test/resources/config_test.yml
#        run: |
#          if [[ -f "${CONFIG_TEST_FILE}" ]]; then
#            echo "config-test-directory=${CONFIG_TEST_FILE}" >> "$GITHUB_OUTPUT"
#          elif [[ -f "code/config_test/config_test.yml" ]]; then
#            echo "config-test-directory=code/config_test/config_test.yml" >> "$GITHUB_OUTPUT"
#          else
#            echo "config_test.yml file not found"
#          fi          
      - name: Store project version
        id: pom-data
        run: |
          echo "app-version=$(xmllint --xpath "/*[name()='project']/*[name()='version']/text()" code/pom.xml)" >> "$GITHUB_OUTPUT"
          
      - name: Run unit tests with release event
        if: github.event_name == 'release'
        working-directory: code
        run: |
            mvn -B clean verify -DskipEnforceSnapshots -Djacoco.skip=false -Damiga.jacoco -DskipITs -DfailIfNoTests=false -Dmaven.test.failure.ignore=false
      - name: Run unit tests
        if: github.event_name != 'release'
        working-directory: code
        run: |
          mvn -B clean verify -Djacoco.skip=false -Damiga.jacoco -DskipITs -DfailIfNoTests=false -Dmaven.test.failure.ignore=false
          
